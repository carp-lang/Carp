(load "Test.carp")
(use Test)

(deftype A [])

(defmodule Wrap
  (deftype B []))

(defmodule Wrap2
  (deftype C []))
(use Wrap2)
(use Wrap)

(deftype B [])

(deftest test
  (assert-equal test
    "(A)"
    (ref (str (ref (A))))
    "implicit .init for global type works")
  (assert-equal test
    "(Wrap.B)"
    (ref (str (ref (Wrap.B))))
    "implicit .init for qualified type defined inside module works")
  (assert-equal test
    "(Wrap2.C)"
    (ref (str (ref (C))))
    "implicit .init for 'use':d type defined inside module works")
  (assert-equal test
    "(B)"
    (ref (str (ref (B))))
    "when module and global types compete, global types are preffered.")
  )
