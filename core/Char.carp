(system-include "carp_char.h")

(defmodule Char
  (Numeric.register Char)
  (Integral.register Char)

  (doc meaning "converts a numerical char into the appropriate number (e.g. from `\1` to `1`).")
  (defn meaning [char-ref]
    (let [c @char-ref]
      (case c
        \0 0
        \1 1
        \2 2
        \3 3
        \4 4
        \5 5
        \6 6
        \7 7
        \8 8
        \9 9
        -1)))

  (doc lower-case? "tests whether a character is lower case.")
  (defn lower-case? [c]
    (and (<= \a c) (<= c \z)))

  (doc upper-case? "tests whether a character is upper case.")
  (defn upper-case? [c]
    (and (<= \A c) (<= c \Z)))

  (doc alpha? "tests whether a character is alphabetical.")
  (defn alpha? [c]
    (or (lower-case? c) (upper-case? c)))

  (doc num? "tests whether a character is numerical.")
  (defn num? [c]
    (and (<= \0 c) (<= c \9)))

  (doc alphanum? "tests whether a character is alphanumerical.")
  (defn alphanum? [c]
    (or (alpha? c) (num? c)))

  (defn zero []
    (Integral.convert 0))
)

(defmodule CharRef
  (NumericRef.register Char)
)

(defmodule PtrChar
  (register str (Fn [(Ptr Char)] String)))
